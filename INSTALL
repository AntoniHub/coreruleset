                           _____ _____   _____    ____
                          / ____|  __ \ / ____|  / _  |
                         | |    | |__) | (___   / / | |
                         | |    |  _  / \___ \ / /__| |_
                         | |____| | \ \ ____) ||____   _|
                          \_____|_|  \_\_____/      |_|

                            OWASP Core Rule Set 4.x

Installing ModSecurity
=====================

    This document does NOT detail how to install ModSecurity. Rather,
    only information pertaining to the installation of the OWASP CRS
    Rule Set (CRS) is provided. However, ModSecurity is a prerequisite
    for the CRS installation. Information on installing ModSecurity
    can be found within the ModSecurity project at
    https://github.com/SpiderLabs/ModSecurity or at ModSecurity.org.

Installing From a Package Manager
=================================

    The OWASP Core Rule Set (CRS) is available from many sources. On
    multiple platforms this includes package managers. These packages are
    maintained by independent packagers who package CRS in their own time.
    Chances are it will be a moment until CRS4 will hit the distros.
    It is therefore recommended that you install, where possible, from
    our GitHub repository.

    Packages of CRS 3.x are incompatible with CRS 4.x and will receive
    new names.

Installing
==========

    You can download a copy of the CRS from the following URL:
    https://coreruleset.org/docs

    Our release zip/tar.gz files are the preferred way to install CRS.
    This includes a nightly option with bleeding edge changes.

    However, you can also clone our GitHub repository to get the
    current work-in-progress for the next release.

Prerequisites
-------------

    CRS is designed to be used with ModSecurity (although many other
    projects also use the provided rules). CRS version 4.x is designed for
    ModSecurity 2.8 or above. Failure to provide this prerequiste may result in
    serious false negatives and CRS version 4.x should NOT be run without
    these.

Upgrading from CRS 3.x
----------------------
    CRS 4.x is a major release incompatible with CRS 3.x.
    The rule IDs have large been left untouched. But many rules have been
    reorganized, split or in individual cases also shifted to different
    ids or paranoia levels
    This means that existing rule exclusions will have to be adopted to
    CRS v4.x. Starting over from scratch is a viable alternative,
    namely if you do not have too many rule exclusions.

Installing on Apache/ModSecurity2
---------------------------------

    Please check out our documentation at https://coreruleset.org/docs.

Installing on Nginx/ModSecurity3
--------------------------------

    Please check out our documentation at https://coreruleset.org/docs.

Installing on IIS/ModSecurity2
------------------------------

    Please check out our documentation at https://coreruleset.org/docs.

Installing on Coraza
--------------------

    Please check out our documentation at https://coreruleset.org/docs.

Testing the Installation
========================
    To test your installation you should be able to use any number
    of attacks. A typical request which should trigger CRS would be
    ```http://localhost/?param="><script>alert(1);</script>```
    Upon sending this request you should see events reported in the
    error log (nginx apache) or the event viewer (IIS).

    If have not changed the defaults with regards to anomaly scoring,
    blocking and sampling percentage, then this request should have
    been blocked and access forbidden. Likewise if you have configured
    ModSecurity debug logging and/or audit logging this event should
    log to these locations as well.

OWASP CRS Configuration
=======================
    The crs-setup.conf file includes management rules
    and directives that can control important CRS functions.
    The crs-setup.conf file comes with extensive comments.
    This section here brings only the essential parts.

    By default we do not include settings within the crs-setup.conf
    that configure ModSecurity itself. Instead those configuration
    settings are set during the installation of ModSecurity proper.
    An example for such such a
    configuration file is available via the ModSecurity project
    (https://github.com/owasp-modsecurity/ModSecurity/blob/master/modsecurity.conf-recommended).
    Be aware the crs-setup.conf file DOES specify
    configuration directives such as SecDefaultAction. The default
    is the anomaly scoring mode with the appropriate
    SecDefaultAction as defined in the crs-setup.conf.
    Alternative configuration modes are supported and explained
    in crs-setup.conf.

    The default anomaly/correlation mode establishes an inbound
    anomaly score threshold of 5 and an outbound anomaly score
    threshold of 4. The default installation has been tuned to
    reduce false positives in a way that will allow most requests
    to pass in this default setup.

    However, testing the setup and tuning false positives
    before going to production is vital. This is especially true
    if you raise the paranoia level with is set to 1 by default.
    Higher paranoia levels ranging from 2 to 4 include more
    aggressive rules which will raise additional false positives
    but also raise the security level of your service.

    If you are unsure about the performance impact of the CRS
    or if you are unsure about the number of false positives, then
    you may want to use the sampling percentage. This number,
    which is set to 100 by default, controls the percentage
    of requests which is funneled into the CRS. Fresh installs
    on high traffic sites are advised to start with a low, or
    very low number of percentages and raise the number
    slowly up to 100. Be aware that any number below 100 allows
    a random number of requests to bypass the ruleset completely.

    Update the TX policy settings for allowed Request Methods, File
    Extensions, maximum numbers of arguments, etc to better reflect
    your environment that is being protected.

    Be sure to check out the other settings present within the
    crs-setup.conf file. There are many other options that have to
    do with aspects of web application security that are beyond
    this document but are well explained in crs-setup.conf.

OWASP CRS Plugins
=================
    Plugins are a way to enhance the CRS rule set with additional
    official and also 3rd party rules that integrate with the standard
    CRS.

    Plugins are more free in what they do and in the dependencies that
    they bring. So we allow plugins to do things that standard CRS
    rules are not allowed to do etc.

    Plugins are installed by copying them into the CRS plugins folder.

    A repository with a list of official and 3rd party plugins can be
    found at https://github.com/coreruleset/plugin-registry.
